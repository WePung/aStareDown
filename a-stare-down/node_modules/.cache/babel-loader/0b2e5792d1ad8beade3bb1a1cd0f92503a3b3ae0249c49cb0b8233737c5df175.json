{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uC9C0\\uC6D0\\\\Desktop\\\\LeeJiWon\\\\2025\\\\\\uB3D9\\uC591\\uBBF8\\uB798\\uB300\\uD559\\uAD50\\\\aStareDown\\\\a-stare-down\\\\src\\\\components\\\\main\\\\ViewCamera.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EYE_LEFT = [263, 249, 390, 373, 374, 380]; // MediaPipe 공식 왼쪽 눈 인덱스\nconst EYE_RIGHT = [33, 7, 163, 144, 145, 153]; // MediaPipe 공식 오른쪽 눈 인덱스\n\nconst ViewCamera = () => {\n  _s();\n  const videoRef = useRef(null);\n  const [blinkCount, setBlinkCount] = useState(0);\n  const [ear, setEar] = useState(0);\n  const faceMeshRef = useRef(null);\n\n  // 눈 깜빡임 비율(EAR) 계산 함수\n  const calculateEAR = (landmarks, eyeIndices) => {\n    const [p1, p2, p3, p4, p5, p6] = eyeIndices.map(i => landmarks[i]);\n    const vertical1 = Math.hypot(p2.x - p6.x, p2.y - p6.y);\n    const vertical2 = Math.hypot(p3.x - p5.x, p3.y - p5.y);\n    const horizontal = Math.hypot(p1.x - p4.x, p1.y - p4.y);\n    return (vertical1 + vertical2) / (2 * horizontal);\n  };\n\n  // MediaPipe 초기화\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/face_mesh.js\";\n    script.onload = initializeFaceMesh;\n    document.head.appendChild(script);\n    return () => {\n      document.head.removeChild(script);\n      if (faceMeshRef.current) faceMeshRef.current.close();\n    };\n  }, []);\n  const initializeFaceMesh = async () => {\n    window.Module = {\n      locateFile: path => `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${path}`\n    };\n    faceMeshRef.current = new window.FaceMesh({\n      locateFile: file => `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`\n    });\n    faceMeshRef.current.setOptions({\n      maxNumFaces: 1,\n      refineLandmarks: true,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n    faceMeshRef.current.onResults(onResults);\n    setupWebcam();\n  };\n\n  // 웹캠 설정\n  const setupWebcam = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: 640,\n          height: 480\n        }\n      });\n      videoRef.current.srcObject = stream;\n      videoRef.current.onloadedmetadata = () => videoRef.current.play();\n      startDetection();\n    } catch (error) {\n      console.error(\"웹캠 접근 오류:\", error);\n    }\n  };\n\n  // 프레임 처리 시작\n  const startDetection = () => {\n    const processFrame = async () => {\n      var _videoRef$current;\n      if (((_videoRef$current = videoRef.current) === null || _videoRef$current === void 0 ? void 0 : _videoRef$current.readyState) === 4) {\n        await faceMeshRef.current.send({\n          image: videoRef.current\n        });\n      }\n      requestAnimationFrame(processFrame);\n    };\n    processFrame();\n  };\n\n  // 결과 처리\n  const onResults = results => {\n    var _results$multiFaceLan;\n    if ((_results$multiFaceLan = results.multiFaceLandmarks) !== null && _results$multiFaceLan !== void 0 && _results$multiFaceLan[0]) {\n      const landmarks = results.multiFaceLandmarks[0];\n      const leftEAR = calculateEAR(landmarks, EYE_LEFT);\n      const rightEAR = calculateEAR(landmarks, EYE_RIGHT);\n      const avgEAR = (leftEAR + rightEAR) / 2;\n      setEar(avgEAR);\n      if (avgEAR < 0.25) {\n        // 임계값 조절 필요 시 수정\n        setBlinkCount(prev => prev + 1);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: 640,\n      margin: \"0 auto\",\n      backgroundColor: \"#1a1a1a\",\n      borderRadius: 8,\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      playsInline: true,\n      style: {\n        width: \"100%\",\n        height: \"auto\",\n        transform: \"scaleX(-1)\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 20,\n        left: 20,\n        color: \"white\",\n        backgroundColor: \"rgba(0,0,0,0.7)\",\n        padding: \"10px 20px\",\n        borderRadius: 8\n      },\n      children: [\"\\uD83D\\uDC41\\uFE0F \\uB208 \\uAE5C\\uBE61\\uC784 \\uD69F\\uC218: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: blinkCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewCamera, \"y9Yq6l5M3+v+ddNKX2+kqiGewj8=\");\n_c = ViewCamera;\nexport default ViewCamera;\nvar _c;\n$RefreshReg$(_c, \"ViewCamera\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","EYE_LEFT","EYE_RIGHT","ViewCamera","_s","videoRef","blinkCount","setBlinkCount","ear","setEar","faceMeshRef","calculateEAR","landmarks","eyeIndices","p1","p2","p3","p4","p5","p6","map","i","vertical1","Math","hypot","x","y","vertical2","horizontal","script","document","createElement","src","onload","initializeFaceMesh","head","appendChild","removeChild","current","close","window","Module","locateFile","path","FaceMesh","file","setOptions","maxNumFaces","refineLandmarks","minDetectionConfidence","minTrackingConfidence","onResults","setupWebcam","stream","navigator","mediaDevices","getUserMedia","video","width","height","srcObject","onloadedmetadata","play","startDetection","error","console","processFrame","_videoRef$current","readyState","send","image","requestAnimationFrame","results","_results$multiFaceLan","multiFaceLandmarks","leftEAR","rightEAR","avgEAR","prev","style","position","margin","backgroundColor","borderRadius","overflow","children","ref","autoPlay","playsInline","transform","fileName","_jsxFileName","lineNumber","columnNumber","top","left","color","padding","_c","$RefreshReg$"],"sources":["C:/Users/이지원/Desktop/LeeJiWon/2025/동양미래대학교/aStareDown/a-stare-down/src/components/main/ViewCamera.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nconst EYE_LEFT = [263, 249, 390, 373, 374, 380]; // MediaPipe 공식 왼쪽 눈 인덱스\r\nconst EYE_RIGHT = [33, 7, 163, 144, 145, 153]; // MediaPipe 공식 오른쪽 눈 인덱스\r\n\r\nconst ViewCamera = () => {\r\n  const videoRef = useRef(null);\r\n  const [blinkCount, setBlinkCount] = useState(0);\r\n  const [ear, setEar] = useState(0);\r\n  const faceMeshRef = useRef(null);\r\n\r\n  // 눈 깜빡임 비율(EAR) 계산 함수\r\n  const calculateEAR = (landmarks, eyeIndices) => {\r\n    const [p1, p2, p3, p4, p5, p6] = eyeIndices.map((i) => landmarks[i]);\r\n    const vertical1 = Math.hypot(p2.x - p6.x, p2.y - p6.y);\r\n    const vertical2 = Math.hypot(p3.x - p5.x, p3.y - p5.y);\r\n    const horizontal = Math.hypot(p1.x - p4.x, p1.y - p4.y);\r\n    return (vertical1 + vertical2) / (2 * horizontal);\r\n  };\r\n\r\n  // MediaPipe 초기화\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src =\r\n      \"https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/face_mesh.js\";\r\n    script.onload = initializeFaceMesh;\r\n    document.head.appendChild(script);\r\n\r\n    return () => {\r\n      document.head.removeChild(script);\r\n      if (faceMeshRef.current) faceMeshRef.current.close();\r\n    };\r\n  }, []);\r\n\r\n  const initializeFaceMesh = async () => {\r\n    window.Module = {\r\n      locateFile: (path) =>\r\n        `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${path}`,\r\n    };\r\n\r\n    faceMeshRef.current = new window.FaceMesh({\r\n      locateFile: (file) =>\r\n        `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`,\r\n    });\r\n\r\n    faceMeshRef.current.setOptions({\r\n      maxNumFaces: 1,\r\n      refineLandmarks: true,\r\n      minDetectionConfidence: 0.5,\r\n      minTrackingConfidence: 0.5,\r\n    });\r\n\r\n    faceMeshRef.current.onResults(onResults);\r\n    setupWebcam();\r\n  };\r\n\r\n  // 웹캠 설정\r\n  const setupWebcam = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: { width: 640, height: 480 },\r\n      });\r\n      videoRef.current.srcObject = stream;\r\n      videoRef.current.onloadedmetadata = () => videoRef.current.play();\r\n      startDetection();\r\n    } catch (error) {\r\n      console.error(\"웹캠 접근 오류:\", error);\r\n    }\r\n  };\r\n\r\n  // 프레임 처리 시작\r\n  const startDetection = () => {\r\n    const processFrame = async () => {\r\n      if (videoRef.current?.readyState === 4) {\r\n        await faceMeshRef.current.send({ image: videoRef.current });\r\n      }\r\n      requestAnimationFrame(processFrame);\r\n    };\r\n    processFrame();\r\n  };\r\n\r\n  // 결과 처리\r\n  const onResults = (results) => {\r\n    if (results.multiFaceLandmarks?.[0]) {\r\n      const landmarks = results.multiFaceLandmarks[0];\r\n      const leftEAR = calculateEAR(landmarks, EYE_LEFT);\r\n      const rightEAR = calculateEAR(landmarks, EYE_RIGHT);\r\n      const avgEAR = (leftEAR + rightEAR) / 2;\r\n      setEar(avgEAR);\r\n\r\n      if (avgEAR < 0.25) {\r\n        // 임계값 조절 필요 시 수정\r\n        setBlinkCount((prev) => prev + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        width: 640,\r\n        margin: \"0 auto\",\r\n        backgroundColor: \"#1a1a1a\",\r\n        borderRadius: 8,\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      <video\r\n        ref={videoRef}\r\n        autoPlay\r\n        playsInline\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"auto\",\r\n          transform: \"scaleX(-1)\",\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: 20,\r\n          left: 20,\r\n          color: \"white\",\r\n          backgroundColor: \"rgba(0,0,0,0.7)\",\r\n          padding: \"10px 20px\",\r\n          borderRadius: 8,\r\n        }}\r\n      >\r\n        👁️ 눈 깜빡임 횟수: <strong>{blinkCount}</strong>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewCamera;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}