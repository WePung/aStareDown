{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uC9C0\\uC6D0\\\\Desktop\\\\LeeJiWon\\\\2025\\\\\\uB3D9\\uC591\\uBBF8\\uB798\\uB300\\uD559\\uAD50\\\\aStareDown\\\\a-stare-down\\\\src\\\\components\\\\main\\\\ViewCamera.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { FaceMesh } from \"@mediapipe/face_mesh\";\nimport { drawConnectors } from \"@mediapipe/drawing_utils\";\n\n// 눈 랜드마크 인덱스 (MediaPipe FaceMesh 기준)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EYE_LEFT = [362, 385, 387, 263, 373, 380];\nconst EYE_RIGHT = [33, 160, 158, 133, 153, 144];\nconst ViewCamera = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [blinkCount, setBlinkCount] = useState(0);\n  const [ear, setEar] = useState(0);\n  const [frameCounter, setFrameCounter] = useState(0);\n\n  // EAR 계산 함수\n  const calculateEAR = (landmarks, eyeIndices) => {\n    const [p1, p2, p3, p4, p5, p6] = eyeIndices.map(i => landmarks[i]);\n    const vertical1 = Math.hypot(p2.x - p6.x, p2.y - p6.y);\n    const vertical2 = Math.hypot(p3.x - p5.x, p3.y - p5.y);\n    const horizontal = Math.hypot(p1.x - p4.x, p1.y - p4.y);\n    return (vertical1 + vertical2) / (2 * horizontal);\n  };\n\n  // MediaPipe 초기화\n  useEffect(() => {\n    const faceMesh = new FaceMesh({\n      locateFile: file => `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`\n    });\n    faceMesh.setOptions({\n      maxNumFaces: 1,\n      refineLandmarks: true,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n    faceMesh.onResults(results => {\n      if (results.multiFaceLandmarks && results.multiFaceLandmarks[0]) {\n        const landmarks = results.multiFaceLandmarks[0];\n\n        // EAR 계산\n        const leftEAR = calculateEAR(landmarks, EYE_LEFT);\n        const rightEAR = calculateEAR(landmarks, EYE_RIGHT);\n        const avgEAR = (leftEAR + rightEAR) / 2;\n        setEar(avgEAR);\n\n        // 눈 깜빡임 판정\n        if (avgEAR < 0.25) {\n          // 임계값 조절 필요\n          setFrameCounter(prev => prev + 1);\n        } else {\n          if (frameCounter >= 2) {\n            // 연속 프레임 조건\n            setBlinkCount(prev => prev + 1);\n          }\n          setFrameCounter(0);\n        }\n      }\n    });\n\n    // 프레임 처리 루프\n    const processFrame = async () => {\n      var _webcamRef$current, _webcamRef$current$vi;\n      if (((_webcamRef$current = webcamRef.current) === null || _webcamRef$current === void 0 ? void 0 : (_webcamRef$current$vi = _webcamRef$current.video) === null || _webcamRef$current$vi === void 0 ? void 0 : _webcamRef$current$vi.readyState) === 4) {\n        await faceMesh.send({\n          image: webcamRef.current.video\n        });\n      }\n      requestAnimationFrame(processFrame);\n    };\n    processFrame();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      ref: webcamRef,\n      style: {\n        width: 640,\n        height: 480\n      },\n      videoConstraints: {\n        facingMode: \"user\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 20,\n        left: 20,\n        color: \"white\",\n        backgroundColor: \"rgba(0,0,0,0.5)\",\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Blink Count: \", blinkCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"EAR: \", ear.toFixed(3)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewCamera, \"sGmccni9zQr4JK32mI+amGnw93c=\");\n_c = ViewCamera;\nexport default ViewCamera;\nvar _c;\n$RefreshReg$(_c, \"ViewCamera\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Webcam","FaceMesh","drawConnectors","jsxDEV","_jsxDEV","EYE_LEFT","EYE_RIGHT","ViewCamera","_s","webcamRef","canvasRef","blinkCount","setBlinkCount","ear","setEar","frameCounter","setFrameCounter","calculateEAR","landmarks","eyeIndices","p1","p2","p3","p4","p5","p6","map","i","vertical1","Math","hypot","x","y","vertical2","horizontal","faceMesh","locateFile","file","setOptions","maxNumFaces","refineLandmarks","minDetectionConfidence","minTrackingConfidence","onResults","results","multiFaceLandmarks","leftEAR","rightEAR","avgEAR","prev","processFrame","_webcamRef$current","_webcamRef$current$vi","current","video","readyState","send","image","requestAnimationFrame","style","position","children","ref","width","height","videoConstraints","facingMode","fileName","_jsxFileName","lineNumber","columnNumber","top","left","color","backgroundColor","padding","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/이지원/Desktop/LeeJiWon/2025/동양미래대학교/aStareDown/a-stare-down/src/components/main/ViewCamera.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport { FaceMesh } from \"@mediapipe/face_mesh\";\r\nimport { drawConnectors } from \"@mediapipe/drawing_utils\";\r\n\r\n// 눈 랜드마크 인덱스 (MediaPipe FaceMesh 기준)\r\nconst EYE_LEFT = [362, 385, 387, 263, 373, 380];\r\nconst EYE_RIGHT = [33, 160, 158, 133, 153, 144];\r\n\r\nconst ViewCamera = () => {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [blinkCount, setBlinkCount] = useState(0);\r\n  const [ear, setEar] = useState(0);\r\n  const [frameCounter, setFrameCounter] = useState(0);\r\n\r\n  // EAR 계산 함수\r\n  const calculateEAR = (landmarks, eyeIndices) => {\r\n    const [p1, p2, p3, p4, p5, p6] = eyeIndices.map((i) => landmarks[i]);\r\n    const vertical1 = Math.hypot(p2.x - p6.x, p2.y - p6.y);\r\n    const vertical2 = Math.hypot(p3.x - p5.x, p3.y - p5.y);\r\n    const horizontal = Math.hypot(p1.x - p4.x, p1.y - p4.y);\r\n    return (vertical1 + vertical2) / (2 * horizontal);\r\n  };\r\n\r\n  // MediaPipe 초기화\r\n  useEffect(() => {\r\n    const faceMesh = new FaceMesh({\r\n      locateFile: (file) =>\r\n        `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`,\r\n    });\r\n\r\n    faceMesh.setOptions({\r\n      maxNumFaces: 1,\r\n      refineLandmarks: true,\r\n      minDetectionConfidence: 0.5,\r\n      minTrackingConfidence: 0.5,\r\n    });\r\n\r\n    faceMesh.onResults((results) => {\r\n      if (results.multiFaceLandmarks && results.multiFaceLandmarks[0]) {\r\n        const landmarks = results.multiFaceLandmarks[0];\r\n\r\n        // EAR 계산\r\n        const leftEAR = calculateEAR(landmarks, EYE_LEFT);\r\n        const rightEAR = calculateEAR(landmarks, EYE_RIGHT);\r\n        const avgEAR = (leftEAR + rightEAR) / 2;\r\n\r\n        setEar(avgEAR);\r\n\r\n        // 눈 깜빡임 판정\r\n        if (avgEAR < 0.25) {\r\n          // 임계값 조절 필요\r\n          setFrameCounter((prev) => prev + 1);\r\n        } else {\r\n          if (frameCounter >= 2) {\r\n            // 연속 프레임 조건\r\n            setBlinkCount((prev) => prev + 1);\r\n          }\r\n          setFrameCounter(0);\r\n        }\r\n      }\r\n    });\r\n\r\n    // 프레임 처리 루프\r\n    const processFrame = async () => {\r\n      if (webcamRef.current?.video?.readyState === 4) {\r\n        await faceMesh.send({ image: webcamRef.current.video });\r\n      }\r\n      requestAnimationFrame(processFrame);\r\n    };\r\n\r\n    processFrame();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <Webcam\r\n        ref={webcamRef}\r\n        style={{ width: 640, height: 480 }}\r\n        videoConstraints={{ facingMode: \"user\" }}\r\n      />\r\n\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: 20,\r\n          left: 20,\r\n          color: \"white\",\r\n          backgroundColor: \"rgba(0,0,0,0.5)\",\r\n          padding: 10,\r\n        }}\r\n      >\r\n        <div>Blink Count: {blinkCount}</div>\r\n        <div>EAR: {ear.toFixed(3)}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewCamera;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}